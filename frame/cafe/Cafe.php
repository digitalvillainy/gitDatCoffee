<?php
/* Generated by neoan3-cli */

namespace Neoan3\Frame;
use Neoan3\Apps\Db;
use Neoan3\Apps\Stateless;
use Neoan3\Core\Serve;
use PHPMailer\PHPMailer\PHPMailer;

class Cafe extends Serve
{
    /**
     * @var array|mixed
     */
    private $credentials = [];
    /**
     * @var bool
     */
    private $developmentMode = true;

    /**
     * Cafe constructor.
     * @throws \Neoan3\Apps\DbException
     */
    function __construct()
    {
        parent::__construct();
        try{
            $this->credentials = getCredentials();
        } catch(\Exception $e){
            print('SETUP: No credentials found. Please check README for instructions and/or change '.__FILE__.' starting at line '.(__LINE__-4).' ');
            die();
        }

        Db::setEnvironment($this->credentials['cafe']);
        Stateless::setSecret($this->credentials['coffee_stateless']['secret']);

        if($_SERVER['HTTP_HOST'] == 'localhost'){
            $this->includeJs(base . 'node_modules/vue/dist/vue.js');
        } else {
            $this->includeJs(base . 'node_modules/vue/dist/vue.min.js');
        }
    }

    /**
     * @param array $params
     */
    function output($params = [])
    {
        $this->js .= 'new Vue({el:"#root"});';
        $this->main = '<div id="root">' . $this->main . '</div>';
        parent::output($params);
    }

    /**
     * @return PHPMailer
     * @throws \PHPMailer\PHPMailer\Exception
     */
    function newMail() {
        $mail = new PHPMailer(true);
        $mail->isSMTP();
        $mail->Host = $this->credentials['blua_mail']['host'];
        $mail->SMTPAuth = true;
        $mail->Username = $this->credentials['blua_mail']['username'];
        $mail->Password = $this->credentials['blua_mail']['password'];
        $mail->SMTPSecure = isset($this->credentials['blua_mail']['secure'])? $this->credentials['blua_mail']['secure'] : 'tls';
        $mail->Port = isset($this->credentials['blua_mail']['port'])? $this->credentials['blua_mail']['port'] : 25;
        $mail->setFrom($this->credentials['blua_mail']['fromEmail'],$this->credentials['blua_mail']['fromEmail']);
        return $mail;
    }

    /**
     * @param       $components
     * @param array $params
     *
     * @return $this
     */
    function vueComponents($components, $params = []){
        // ensure that at least "base" is available
        $params['base'] = base;

        // iterate through provided component names
        foreach ($components as $component){
            $path = path . '/component/' . $component . '/' . $component  . '.ce.';

            // if template exists, write template to footer
            if(file_exists($path . $this->viewExt)){
                $this->footer .= '<template id="' . $component . '">' .
                    $this->fileContent($path . $this->viewExt, $params) . '</template>';
            }

            // if js exists, write to js stream
            if(file_exists($path . 'js')){
                $this->js .= $this->fileContent($path . 'js', $params);
            }

            // if stylesheet exists, write to style stream
            if(file_exists($path . $this->styleExt)){
                $this->style .= $this->fileContent($path . $this->styleExt, $params);
            }
        }
        return $this;
    }

    /**
     * @return array
     */
    function constants()
    {
        return [
            'base' => [base],
            'link' => [
                [
                    'sizes' => '32x32',
                    'type' => 'image/png',
                    'rel' => 'icon',
                    'href' => 'asset/neoan-favicon.png'
                ]
            ],
            'stylesheet' => [
                '' . base . 'frame/cafe/cafe.css.map',
                '' . base . 'frame/cafe/cafe.css',
                '' . base . 'asset/fontawesome-free-5.12.0-web/css/fontawesome.min.css',
                '' . base . 'asset/fontawesome-free-5.12.0-web/css/brands.min.css',
                '' . base . 'asset/fontawesome-free-5.12.0-web/css/solid.min.css'
            ],
            'js' =>[
                ['src' => base . 'node_modules/axios/dist/axios.min.js'],
                ['src' => base . 'asset/fontawesome-free-5.12.0-web/js/brands.min.js', 'data'=>['base'=> base]],
                ['src' => base . 'asset/fontawesome-free-5.12.0-web/js/solid.min.js', 'data'=>['base'=> base]],
                ['src' => base . 'asset/fontawesome-free-5.12.0-web/js/fontawesome.min.js', 'data'=>['base'=> base]],
                ['src' => path . '/frame/cafe/axios-wrapper.js', 'data'=>['base' => base]]
            ]
        ];
    }
}
